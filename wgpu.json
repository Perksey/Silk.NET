{
    "tasks": [
        {
            "profileName": "webgpu",
            "sources": [
                "build/submodules/webgpu-headers/webgpu.h",
                "build/submodules/wgpu-native/ffi/wgpu.h",
                "build/submodules/dawn/out/Debug/gen/include/dawn/dawn-webgpu.h"
            ],
            "mode": "Clang",
            "cacheDir": "build/cache",
            "cacheKey": "webgpu",
            "controlDescriptors": [
                "convert-windows-only",
                "no-obsolete-enum",
                "typemap-native"
            ],
            "converter": {},
            "prefix": "wgpu",
            "clang": {
                "args": [
                    "--language=c++",
                    "--std=c++17",
                    "-m64",
                    "-Wno-expansion-to-defined",
                    "-Wno-ignored-attributes",
                    "-Wno-ignored-pragma-intrinsic",
                    "-Wno-nonportable-include-path",
                    "-Wno-pragma-pack",
                    "-I$windowsSdkIncludes",
                    "-Ibuild/submodules/wgpu-native/ffi"
                ],
                "traverse": [
                    "build/submodules/webgpu-headers/*.h",
                    "build/submodules/wgpu-native/*.h"
                ],
                "classes": {
                    "webgpu.h": "[Core]WebGPU",
                    "wgpu.h": "[WGPU:WebGPU]Wgpu",
                    "dawn-webgpu.h": "[Dawn:WebGPU]Dawn"
                }
            },
            "exclude": [
                
            ],
            "rename": {
                "WGPUComputePipelineImpl": "ComputePipeline",
                "WGPUAdapterImpl": "Adapter",
                "WGPUBindGroupImpl": "BindGroup",
                "WGPUBindGroupLayoutImpl": "BindGroupLayout",
                "WGPUBufferImpl": "Buffer",
                "WGPUCommandBufferImpl": "CommandBuffer",
                "WGPUCommandEncoderImpl": "CommandEncoder",
                "WGPUComputePassEncoderImpl": "ComputePassEncoder",
                "WGPUDeviceImpl": "Device",
                "WGPUInstanceImpl": "Instance",
                "WGPUPipelineLayoutImpl": "PipelineLayout",
                "WGPUQuerySetImpl": "QuerySet",
                "WGPUQueueImpl": "Queue",
                "WGPURenderBundleEncoderImpl": "RenderBundleEncoder",
                "WGPURenderBundleImpl": "RenderBundle",
                "WGPURenderPassEncoderImpl": "RenderPassEncoder",
                "WGPURenderPipelineImpl": "RenderPipeline",
                "WGPUSamplerImpl": "Sampler",
                "WGPUShaderModuleImpl": "ShaderModule",
                "WGPUSurfaceImpl": "Surface",
                "WGPUSwapChainImpl": "SwapChain",
                "WGPUTextureImpl": "Texture",
                "WGPUTextureViewImpl": "TextureView"
            },
            "bakery": {
                "profileNames": [
                    "webgpu",
                    "wgpu",
                    "dawn-webgpu"
                ]
            },
            "output": {
                "mode": "Default",
                "path": "src/WebGPU",
                "licenseFile": "build/LICENSE_HEADER.txt",
                "props": "build/props/bindings.props"
            },
            "namespace": "Silk.NET.WebGPU",
            "extensionsNamespace": "Silk.NET.WebGPU.Extensions",
            "nameContainer": {
                "linux-x64": "libwgpu.so",
                "win-x64": "libwgpu.dll",
                "win-x86": "libwgpu.dll",
                "osx-x64": "libwgpu.dylib",
                "android": "libwgpu.so",
                "className": "WebGPULibraryNameContainer"
            },
            "typeMaps": [
                {
                    "WGPUColorWriteMaskFlags": "Silk.NET.WebGPU.ColorWriteMask",
                    "WGPUBufferUsageFlags": "Silk.NET.WebGPU.BufferUsage",
                    "WGPUMapModeFlags": "Silk.NET.WebGPU.MapMode",
                    "WGPUShaderStageFlags": "Silk.NET.WebGPU.ShaderStage",
                    "WGPUTextureUsageFlags": "Silk.NET.WebGPU.TextureUsage"
                },
                {
                    "$include.commonTypeMap": "build/csharp_typemap.json",
                    "$include.dxTypeMap": "build/dx_typemap.json"
                }
            ]
        }
    ]
}
